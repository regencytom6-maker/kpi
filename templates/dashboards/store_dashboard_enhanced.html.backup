{% extends 'base.html' %}

{% block title %}Store Manager Dashboard - Kampala Pharmaceutical Industries{% endblock %}

<!-- Version: 2025-08-25-001 - Force browser cache refresh -->

{% block styles %}
<style>
    /* Inventory table styles */
    .product-tags {
        max-width: 200px;
        overflow-x: hidden;
    }
    
    .product-tags .badge {
        display: inline-block;
        margin-right: 3px;
        margin-bottom: 3px;
        white-space: nowrap;
    }
    
    /* Detailed view styles */
    .associated-products {
        max-height: 200px;
        overflow-y: auto;
    }
    
    #inventoryTable th, #inventoryTable td {
        vertical-align: middle;
    }
</style>
{% endblock %}

{% block content %}
<!-- Fix URLs for API calls -->
<script>
// Intercept fetch calls to fix URLs with underscores
const originalFetch = window.fetch;
window.fetch = function() {
    // Convert the first argument (URL) if it's a string
    if (typeof arguments[0] === 'string') {
        // Replace raw_materials with raw-materials in API calls
        arguments[0] = arguments[0].replace('/raw_materials/api/', '/raw-materials/api/');
    }
    return originalFetch.apply(this, arguments);
};

// Also intercept jQuery ajax calls
if (window.jQuery) {
    const originalAjax = jQuery.ajax;
    jQuery.ajax = function(options) {
        if (typeof options.url === 'string') {
            options.url = options.url.replace('/raw_materials/api/', '/raw-materials/api/');
        }
        return originalAjax.call(this, options);
    };
}
</script>

<div class="container-fluid mt-4">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="text-primary mb-0">
                        <i class="fas fa-warehouse me-2"></i>Store Manager Dashboard
                    </h2>
                    <p class="text-muted mb-0">Raw Material Release Management</p>
                </div>
                <div class="text-end">
                    <small class="text-muted">Welcome, {{ user.get_full_name|default:user.username }}</small><br>
                    <small class="text-success">{{ user.get_role_display }}</small>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-md-3">
            <a href="?filter=pending" class="text-decoration-none">
                <div class="card bg-warning text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h5 class="card-title mb-0">{{ stats.pending_phases }}</h5>
                                <p class="card-text">Pending Releases</p>
                            </div>
                            <i class="fas fa-clock fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </a>
        </div>
        <div class="col-md-3">
            <a href="?filter=in_progress" class="text-decoration-none">
                <div class="card bg-info text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h5 class="card-title mb-0">{{ stats.in_progress_phases }}</h5>
                                <p class="card-text">In Progress</p>
                            </div>
                            <i class="fas fa-box fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </a>
        </div>
        <div class="col-md-3">
            <a href="?filter=completed_today" class="text-decoration-none">
                <div class="card bg-success text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h5 class="card-title mb-0">{{ stats.completed_today }}</h5>
                                <p class="card-text">Completed Today</p>
                            </div>
                            <i class="fas fa-check-circle fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </a>
        </div>
        <div class="col-md-3">
            <a href="?filter=total_batches" class="text-decoration-none">
                <div class="card bg-primary text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h5 class="card-title mb-0">{{ stats.total_batches }}</h5>
                                <p class="card-text">Total Batches</p>
                            </div>
                            <i class="fas fa-clipboard-check fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </a>
        </div>
    </div>
    


    <!-- Navigation Tabs -->
    <ul class="nav nav-tabs mb-4" id="storeTabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="releases-tab" data-bs-toggle="tab" data-bs-target="#releases" type="button" role="tab" aria-controls="releases" aria-selected="true">
                <i class="fas fa-box-open me-2"></i>Material Releases
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="inventory-tab" data-bs-toggle="tab" data-bs-target="#inventory" type="button" role="tab" aria-controls="inventory" aria-selected="false">
                <i class="fas fa-boxes me-2"></i>Inventory
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="add-material-tab" data-bs-toggle="tab" data-bs-target="#add-material" type="button" role="tab" aria-controls="add-material" aria-selected="false">
                <i class="fas fa-plus-circle me-2"></i>Add New Raw Material
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="receive-batch-tab" data-bs-toggle="tab" data-bs-target="#receive-batch" type="button" role="tab" aria-controls="receive-batch" aria-selected="false">
                <i class="fas fa-truck-loading me-2"></i>Receive Raw Material Batch
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="expiry-tab" data-bs-toggle="tab" data-bs-target="#expiry" type="button" role="tab" aria-controls="expiry" aria-selected="false">
                <i class="fas fa-calendar-times me-2"></i>Expiry Tracking
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="history-tab" data-bs-toggle="tab" data-bs-target="#history" type="button" role="tab" aria-controls="history" aria-selected="false">
                <i class="fas fa-history me-2"></i>Recent Activity
            </button>
        </li>
    </ul>



    <div class="row">
        <!-- Sidebar -->
        <div class="col-md-3">
            <!-- Material Status Card -->
            <div class="card mb-4">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0"><i class="fas fa-boxes me-2"></i>Material Status</h5>
                </div>
                <div class="list-group list-group-flush">
                    <a href="?section=pending_qc" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        <div>
                            <i class="fas fa-flask me-2 text-secondary"></i>Pending QC
                        </div>
                        <span class="badge bg-secondary rounded-pill">{{ stats.pending_qc_count }}</span>
                    </a>
                    <a href="?section=approved" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        <div>
                            <i class="fas fa-check-double me-2 text-success"></i>Approved Batches
                        </div>
                        <span class="badge bg-success rounded-pill">{{ stats.approved_count }}</span>
                    </a>
                    <a href="?section=dispensing" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        <div>
                            <i class="fas fa-weight me-2 text-info"></i>Pending Dispensing
                        </div>
                        <span class="badge bg-info rounded-pill">{{ pending_dispensing }}</span>
                    </a>
                </div>
            </div>
            
            <!-- Quick Filters -->
            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0"><i class="fas fa-filter me-2"></i>Quick Filters</h5>
                </div>
                <div class="list-group list-group-flush">
                    <a href="?filter=pending" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        <div>
                            <i class="fas fa-clock me-2 text-warning"></i>Pending Releases
                        </div>
                        <span class="badge bg-warning rounded-pill">{{ stats.pending_phases }}</span>
                    </a>
                    <a href="?filter=in_progress" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        <div>
                            <i class="fas fa-box me-2 text-info"></i>In Progress
                        </div>
                        <span class="badge bg-info rounded-pill">{{ stats.in_progress_phases }}</span>
                    </a>
                    <a href="?filter=completed_today" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        <div>
                            <i class="fas fa-check-circle me-2 text-success"></i>Completed Today
                        </div>
                        <span class="badge bg-success rounded-pill">{{ stats.completed_today }}</span>
                    </a>
                </div>
            </div>
        </div>
        
        <!-- Main Content -->
        <div class="col-md-9">
            <!-- Tab Content -->
            <div class="tab-content" id="storeTabsContent">
                <!-- Material Releases Tab -->
                <div class="tab-pane fade show active" id="releases" role="tabpanel" aria-labelledby="releases-tab">
                    <div class="card">
                        <div class="card-header bg-primary text-white">
                            <h5 class="mb-0">
                                <i class="fas fa-warehouse me-2"></i>Raw Material Release Queue
                            </h5>
                        </div>
                        <div class="card-body">
                    {% if my_phases %}
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>BMR Number</th>
                                        <th>Product</th>
                                        <th>Batch Size</th>
                                        <th>Priority</th>
                                        <th>Created</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {% for phase in my_phases %}
                                    <tr>
                                        <td><strong class="text-primary">{{ phase.bmr.bmr_number }}</strong></td>
                                        <td>{{ phase.bmr.product.product_name }}</td>
                                        <td>{{ phase.bmr.batch_size|floatformat:0 }} {{ phase.bmr.product.unit_of_measure }}</td>
                                        <td>
                                            {% if phase.bmr.created_date|timesince|slice:":1" == "0" %}
                                                <span class="badge bg-danger">Urgent</span>
                                            {% elif phase.bmr.created_date|timesince|slice:":1" == "1" %}
                                                <span class="badge bg-warning">High</span>
                                            {% else %}
                                                <span class="badge bg-success">Normal</span>
                                            {% endif %}
                                        </td>
                                        <td>{{ phase.bmr.created_date|date:"M d, H:i" }}</td>
                                        <td>
                                            {% if phase.status == 'pending' %}
                                                <span class="badge bg-warning">Pending</span>
                                            {% elif phase.status == 'in_progress' %}
                                                <span class="badge bg-info">In Progress</span>
                                            {% else %}
                                                <span class="badge bg-success">{{ phase.status|title }}</span>
                                            {% endif %}
                                        </td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                <a href="{% url 'bmr:detail' phase.bmr.pk %}" 
                                                   class="btn btn-outline-primary btn-sm">
                                                    <i class="fas fa-eye"></i> View
                                                </a>
                                                {% if phase.status == 'pending' %}
                                                <button class="btn btn-outline-success btn-sm"
                                                        onclick="startRelease('{{ phase.bmr.pk }}', '{{ phase.bmr.bmr_number }}')">
                                                    <i class="fas fa-play"></i> Start
                                                </button>
                                                {% elif phase.status == 'in_progress' %}
                                                <button class="btn btn-outline-warning btn-sm"
                                                        onclick="completeRelease('{{ phase.bmr.pk }}', '{{ phase.bmr.bmr_number }}')">
                                                    <i class="fas fa-check"></i> Complete
                                                </button>
                                                {% endif %}
                                            </div>
                                        </td>
                                    </tr>
                                    {% endfor %}
                                </tbody>
                            </table>
                        </div>
                    {% else %}
                        <div class="text-center py-5">
                            <i class="fas fa-warehouse fa-3x text-success mb-3"></i>
                            <h5 class="text-muted">No Pending Raw Material Releases</h5>
                            <p class="text-muted">All raw material release requests are up to date.</p>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
        
        <!-- Inventory Tab -->
        <div class="tab-pane fade" id="inventory" role="tabpanel" aria-labelledby="inventory-tab">
            <div class="card">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-boxes me-2"></i>Raw Materials Inventory
                    </h5>
                </div>
                <div class="card-body">
                    <!-- Inventory Search and Filter -->
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <div class="input-group">
                                <input type="text" id="inventorySearch" class="form-control" placeholder="Search materials...">
                                <button class="btn btn-outline-primary" type="button" onclick="searchInventory()">
                                    <i class="fas fa-search"></i>
                                </button>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <select id="categoryFilter" class="form-select" onchange="filterInventory()">
                                <option value="">All Categories</option>
                                <option value="active">Active Ingredients</option>
                                <option value="excipient">Excipients</option>
                                <option value="packaging">Packaging Materials</option>
                                <option value="other">Other</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <select id="statusFilter" class="form-select" onchange="filterInventory()">
                                <option value="">All Statuses</option>
                                <option value="in_stock">In Stock</option>
                                <option value="low_stock">Low Stock</option>
                                <option value="out_of_stock">Out of Stock</option>
                            </select>
                        </div>
                    </div>
                    
                    <!-- Inventory View Toggle -->
                    <div class="d-flex justify-content-end mb-2">
                        <div class="btn-group" role="group">
                            <button type="button" class="btn btn-sm btn-outline-primary active" id="view-by-material-btn">
                                <i class="fas fa-th-list me-1"></i>View by Material
                            </button>
                            <button type="button" class="btn btn-sm btn-outline-primary" id="view-by-product-btn">
                                <i class="fas fa-pills me-1"></i>View by Product
                            </button>
                        </div>
                    </div>
                    
                    <!-- Materials View -->
                    <div id="materials-inventory-view">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover" id="inventoryTable">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Material Code</th>
                                        <th>Material Name</th>
                                        <th>Type</th>
                                        <th>Quantity</th>
                                        <th>Units</th>
                                        <th>Reorder Level</th>
                                        <th>Status</th>
                                        <th>Associated Products</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="inventoryTableBody">
                                    <!-- Will be populated via AJAX -->
                                    <tr>
                                        <td colspan="9" class="text-center">
                                            <div class="spinner-border text-primary" role="status">
                                                <span class="visually-hidden">Loading...</span>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    
                    <!-- Products View (initially hidden) -->
                    <div id="products-inventory-view" style="display: none;">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover" id="productInventoryTable">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Product</th>
                                        <th>Type</th>
                                        <th>Materials Status</th>
                                        <th>Pending QC</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="productInventoryTableBody">
                                    <tr>
                                        <td colspan="5" class="text-center">
                                            <div class="spinner-border text-primary" role="status">
                                                <span class="visually-hidden">Loading...</span>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Add New Raw Material Tab -->
        <div class="tab-pane fade" id="add-material" role="tabpanel" aria-labelledby="add-material-tab">
            <div class="card mt-2">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-plus-circle me-2"></i>Add New Raw Material
                    </h5>
                </div>
                <div class="card-body">
                    <form id="newMaterialForm" method="post">
                        {% csrf_token %}
                        <input type="hidden" name="form_type" value="new_material">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label">Material Name</label>
                                <input type="text" name="material_name" class="form-control" required>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Material Type</label>
                                <select name="material_type" class="form-select" required>
                                    <option value="">Select Type</option>
                                    <option value="active">Active Ingredient</option>
                                    <option value="excipient">Excipient</option>
                                    <option value="packaging">Packaging Material</option>
                                    <option value="other">Other</option>
                                </select>
                            </div>
                        </div>
                        
                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label class="form-label">Unit of Measure</label>
                                <select name="unit_of_measure" class="form-select" required>
                                    <option value="">Select Unit</option>
                                    <option value="kg">Kilograms (kg)</option>
                                    <option value="g">Grams (g)</option>
                                    <option value="l">Liters (L)</option>
                                    <option value="ml">Units (U)</option>
                                    <option value="pcs">Pieces (pcs)</option>
                                </select>
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Initial Quantity</label>
                                <input type="number" name="initial_quantity" class="form-control" min="0" step="0.01" required>
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Reorder Level</label>
                                <input type="number" name="reorder_level" class="form-control" min="0" step="0.01" required>
                            </div>
                        </div>
                        
                        <div class="row mb-3">
                            <div class="col-md-12">
                                <label class="form-label">Product Association</label>
                                <div class="border rounded p-3">
                                    <p class="text-muted small mb-2">Select products that use this raw material:</p>
                                    <select id="associated_products" name="associated_products" class="form-select" multiple required>
                                        <!-- Will be populated via AJAX -->
                                    </select>
                                    <small class="text-muted">Hold Ctrl (Windows) or Command (Mac) to select multiple products.</small>
                                </div>
                            </div>
                        </div>
                        
                        <div class="row mb-3">
                            <div class="col-md-12">
                                <label class="form-label">Supplier Information</label>
                                <textarea name="supplier_info" class="form-control" rows="2"></textarea>
                            </div>
                        </div>
                        
                        <div class="row mb-3">
                            <div class="col-md-12">
                                <label class="form-label">Additional Notes</label>
                                <textarea name="notes" class="form-control" rows="2"></textarea>
                            </div>
                        </div>
                        
                        <div class="text-end">
                            <button type="reset" class="btn btn-outline-secondary">
                                <i class="fas fa-undo me-2"></i>Reset
                            </button>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-2"></i>Save New Material
                            </button>
                        </div>
                    </form>
                    
                    <div id="newMaterialSuccess" class="alert alert-success mt-3 d-none">
                        <i class="fas fa-check-circle me-2"></i>Raw material added successfully!
                        <button class="btn btn-sm btn-outline-success float-end" onclick="resetNewMaterialForm()">
                            <i class="fas fa-plus me-1"></i>Add Another Raw Material
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Receive Raw Material Batch Tab -->
        <div class="tab-pane fade" id="receive-batch" role="tabpanel" aria-labelledby="receive-batch-tab">
            <div class="card mt-2">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-truck-loading me-2"></i>Receive Raw Material Batch
                    </h5>
                </div>
                <div class="card-body">
                    <form id="receiveMaterialForm" method="post">
                        {% csrf_token %}
                        <input type="hidden" name="form_type" value="receive_material">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label">Select Raw Material</label>
                                <select name="material_id" class="form-select" required id="material_selector">
                                    <option value="">Select Material</option>
                                    <!-- Will be populated via AJAX -->
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Batch Number</label>
                                <input type="text" name="batch_number" class="form-control" placeholder="Supplier's batch number" required>
                            </div>
                        </div>
                        
                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label class="form-label">Received Quantity</label>
                                <input type="number" name="received_quantity" class="form-control" min="0.01" step="0.01" required>
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Unit of Measure</label>
                                <input type="text" id="unit_display" class="form-control" readonly>
                                <input type="hidden" name="unit_of_measure" id="unit_hidden">
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Delivery Date</label>
                                <input type="date" name="delivery_date" class="form-control" value="{{ today|date:'Y-m-d' }}" required>
                            </div>
                        </div>
                        
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label">Manufacturing Date</label>
                                <input type="date" name="manufacturing_date" class="form-control" required>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Expiry Date</label>
                                <input type="date" name="expiry_date" class="form-control" required>
                            </div>
                        </div>
                        
                        <div class="row mb-3">
                            <div class="col-md-12">
                                <label class="form-label">Supplier Information</label>
                                <textarea name="supplier_info" class="form-control" rows="2" id="supplier_info_display" readonly></textarea>
                            </div>
                        </div>
                        
                        <div class="row mb-3">
                            <div class="col-md-12">
                                <label class="form-label">Receiving Notes</label>
                                <textarea name="receiving_notes" class="form-control" rows="2"></textarea>
                            </div>
                        </div>
                        
                        <div class="text-end">
                            <button type="reset" class="btn btn-outline-secondary">
                                <i class="fas fa-undo me-2"></i>Reset
                            </button>
                            <button type="submit" class="btn btn-success">
                                <i class="fas fa-truck-loading me-2"></i>Record Received Batch
                            </button>
                        </div>
                    </form>
                    
                    <div id="receiveMaterialSuccess" class="alert alert-success mt-3 d-none">
                        <i class="fas fa-check-circle me-2"></i>Raw material batch received successfully!
                        <button class="btn btn-sm btn-outline-success float-end" onclick="resetReceiveMaterialForm()">
                            <i class="fas fa-plus me-1"></i>Receive Another Batch
                        </button>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Expiry Tracking Tab -->
        <div class="tab-pane fade" id="expiry" role="tabpanel" aria-labelledby="expiry-tab">
            <div class="card">
                <div class="card-header bg-danger text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-calendar-times me-2"></i>Expiry Tracking
                    </h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover" id="expiryTable">
                            <thead class="table-dark">
                                <tr>
                                    <th>Material</th>
                                    <th>Batch Number</th>
                                    <th>Quantity Left</th>
                                    <th>Expiry Date</th>
                                    <th>Days Left</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody id="expiryTableBody">
                                <!-- Will be populated via AJAX -->
                                <tr>
                                    <td colspan="6" class="text-center">
                                        <div class="spinner-border text-primary" role="status">
                                            <span class="visually-hidden">Loading...</span>
                                        </div>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Recent Activity Tab -->
        <div class="tab-pane fade" id="history" role="tabpanel" aria-labelledby="history-tab">
            <div class="card">
                <div class="card-header bg-secondary text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-history me-2"></i>Recent Activity
                    </h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>Date</th>
                                    <th>Action</th>
                                    <th>Material</th>
                                    <th>Batch</th>
                                    <th>Quantity</th>
                                    <th>User</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for action in recent_activity %}
                                <tr>
                                    <td>{{ action.timestamp|date:"M d, H:i" }}</td>
                                    <td>
                                        {% if action.action_type == 'receive' %}
                                            <span class="badge bg-success">Received</span>
                                        {% elif action.action_type == 'issue' %}
                                            <span class="badge bg-warning">Issued</span>
                                        {% elif action.action_type == 'add' %}
                                            <span class="badge bg-primary">Added</span>
                                        {% else %}
                                            <span class="badge bg-secondary">{{ action.action_type|title }}</span>
                                        {% endif %}
                                    </td>
                                    <td>{{ action.material.material_name }}</td>
                                    <td>
                                        {% if action.batch_number %}
                                            {{ action.batch_number }}
                                        {% else %}
                                            <span class="text-muted">N/A</span>
                                        {% endif %}
                                    </td>
                                    <td>
                                        {% if action.action_type == 'receive' %}
                                            <span class="text-success">+{{ action.quantity }} {{ action.material.unit_of_measure }}</span>
                                        {% elif action.action_type == 'issue' %}
                                            <span class="text-danger">-{{ action.quantity }} {{ action.material.unit_of_measure }}</span>
                                        {% else %}
                                            {{ action.quantity }} {{ action.material.unit_of_measure }}
                                        {% endif %}
                                    </td>
                                    <td>{{ action.user.username }}</td>
                                </tr>
                                {% empty %}
                                <tr>
                                    <td colspan="6" class="text-center text-muted py-3">No recent activity recorded</td>
                                </tr>
                                {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Recent Activities Summary (Always visible) -->
    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0"><i class="fas fa-history me-2"></i>Recent Material Releases</h5>
                </div>
                <div class="card-body p-0">
                    {% if recently_completed %}
                    <div class="table-responsive">
                        <table class="table table-striped table-hover mb-0">
                            <thead class="table-dark">
                                <tr>
                                    <th>Date</th>
                                    <th>BMR</th>
                                    <th>Product</th>
                                    <th>Released By</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for phase in recently_completed %}
                                <tr>
                                    <td>{{ phase.completed_date|date:"Y-m-d H:i" }}</td>
                                    <td><strong class="text-primary">{{ phase.bmr.batch_number }}</strong></td>
                                    <td>{{ phase.bmr.product.product_name }}</td>
                                    <td>{{ phase.completed_by.get_full_name }}</td>
                                </tr>
                                {% endfor %}
                            </tbody>
                        </table>
                    </div>
                    {% else %}
                    <div class="p-3 text-center text-muted">No recent material releases found.</div>
                    {% endif %}
                </div>
            </div>
        </div>
        
        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0"><i class="fas fa-boxes me-2"></i>Recent Material Receipts</h5>
                </div>
                <div class="card-body p-0">
                    {% if recent_batches %}
                    <div class="table-responsive">
                        <table class="table table-striped table-hover mb-0">
                            <thead class="table-dark">
                                <tr>
                                    <th>Date</th>
                                    <th>Material</th>
                                    <th>Batch</th>
                                    <th>Quantity</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for batch in recent_batches %}
                                <tr>
                                    <td>{{ batch.received_date|date:"Y-m-d" }}</td>
                                    <td>{{ batch.material.material_name }}</td>
                                    <td><strong class="text-primary">{{ batch.batch_number }}</strong></td>
                                    <td>{{ batch.quantity_received }} {{ batch.material.unit_of_measure }}</td>
                                    <td>
                                        {% if batch.status == 'pending_qc' %}
                                        <span class="badge bg-warning">Pending QC</span>
                                        {% elif batch.status == 'approved' %}
                                        <span class="badge bg-success">Approved</span>
                                        {% elif batch.status == 'rejected' %}
                                        <span class="badge bg-danger">Rejected</span>
                                        {% else %}
                                        <span class="badge bg-secondary">{{ batch.status|title }}</span>
                                        {% endif %}
                                    </td>
                                </tr>
                                {% endfor %}
                            </tbody>
                        </table>
                    </div>
                    {% else %}
                    <div class="p-3 text-center text-muted">No recent material batches found.</div>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block extra_js %}
<script>
    // Load inventory data when page loads
    $(document).ready(function() {
        loadInventoryData();
        loadExpiryData();
        loadMaterialsList();
        loadProductsList();
        
        // Form submission for new material
        $('#newMaterialForm').submit(function(e) {
            e.preventDefault();
            $.ajax({
                type: 'POST',
                url: '{% url "store:ajax_material_action" %}',
                data: $(this).serialize(),
                success: function(response) {
                    if(response.status === 'success') {
                        $('#newMaterialSuccess').removeClass('d-none');
                        loadInventoryData(); // Refresh inventory
                        loadMaterialsList(); // Refresh materials dropdown
                    } else {
                        alert('Error: ' + response.message);
                    }
                }
            });
        });
        
        // Form submission for receiving material
        $('#receiveMaterialForm').submit(function(e) {
            e.preventDefault();
            $.ajax({
                type: 'POST',
                url: '{% url "store:ajax_material_action" %}',
                data: $(this).serialize(),
                success: function(response) {
                    if(response.status === 'success') {
                        $('#receiveMaterialSuccess').removeClass('d-none');
                        loadInventoryData(); // Refresh inventory
                        loadExpiryData();   // Refresh expiry data
                    } else {
                        alert('Error: ' + response.message);
                    }
                }
            });
        });
        
        // Material selector change event
        $('#material_selector').change(function() {
            var materialId = $(this).val();
            if(materialId) {
                $.ajax({
                    type: 'GET',
                    url: '{% url "store:ajax_get_material_info" %}',
                    data: {
                        'material_id': materialId
                    },
                    success: function(data) {
                        $('#unit_display').val(data.unit_of_measure);
                        $('#unit_hidden').val(data.unit_of_measure);
                        $('#supplier_info_display').val(data.supplier_info || 'No supplier information available');
                    }
                });
            } else {
                $('#unit_display').val('');
                $('#unit_hidden').val('');
                $('#supplier_info_display').val('');
            }
        });
    });
    
    // Load inventory data via AJAX
    function loadInventoryData() {
        $.ajax({
            type: 'GET',
            url: '{% url "store:ajax_inventory_data" %}',
            success: function(data) {
                populateInventoryTable(data.materials);
            }
        });
    }
    
    // Populate inventory table with data
    function populateInventoryTable(materials) {
        var tableBody = $('#inventoryTableBody');
        tableBody.empty();
        
        if (materials && materials.length > 0) {
            materials.forEach(function(material) {
                var statusClass = material.status === 'in_stock' ? 'bg-success' : 
                                 (material.status === 'low_stock' ? 'bg-warning' : 'bg-danger');
                var statusText = material.status === 'in_stock' ? 'In Stock' : 
                               (material.status === 'low_stock' ? 'Low Stock' : 'Out of Stock');
                
                // Get associated products
                let productsDisplay = '<span class="text-muted">None</span>';
                if (material.products && material.products.length > 0) {
                    productsDisplay = material.products.map(product => 
                        `<span class="badge bg-secondary me-1 mb-1">${product}</span>`
                    ).join('');
                }
                
                // Calculate how many approved batches are available
                let approvedBatchesText = '';
                if (material.pending_qc_batches > 0) {
                    approvedBatchesText = `<span class="badge bg-warning text-dark me-1" title="Pending QC">${material.pending_qc_batches} pending QC</span>`;
                }
                
                tableBody.append(`
                    <tr>
                        <td><strong>${material.material_code}</strong></td>
                        <td>
                            ${material.material_name}
                            ${approvedBatchesText}
                        </td>
                        <td>${material.category_display}</td>
                        <td class="text-end fw-bold">${parseFloat(material.current_stock).toFixed(2)}</td>
                        <td>${material.unit_of_measure}</td>
                        <td class="text-end">${parseFloat(material.reorder_level).toFixed(2)}</td>
                        <td><span class="badge ${statusClass}">${statusText}</span></td>
                        <td class="product-tags">${productsDisplay}</td>
                        <td>
                            <button class="btn btn-sm btn-outline-info" onclick="viewMaterialDetails(${material.id})" title="View Details">
                                <i class="fas fa-info-circle"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-primary ms-1" onclick="viewMaterialBatches(${material.id})" title="View Batches">
                                <i class="fas fa-layer-group"></i>
                            </button>
                        </td>
                    </tr>
                `);
            });
        } else {
            tableBody.append(`
                <tr>
                    <td colspan="7" class="text-center text-muted py-3">No materials found</td>
                </tr>
            `);
        }
    }
    
    // Search inventory
    function searchInventory() {
        var searchTerm = $('#inventorySearch').val().toLowerCase();
        var categoryFilter = $('#categoryFilter').val();
        var statusFilter = $('#statusFilter').val();
        
        $('#inventoryTable tbody tr').each(function() {
            var row = $(this);
            var materialName = row.find('td:first').text().toLowerCase();
            var materialType = row.find('td:nth-child(2)').text().toLowerCase();
            var materialStatus = row.find('td:nth-child(6)').text().toLowerCase();
            
            var nameMatch = materialName.indexOf(searchTerm) > -1;
            var categoryMatch = categoryFilter === '' || materialType.indexOf(categoryFilter) > -1;
            var statusMatch = statusFilter === '' || materialStatus.indexOf(statusFilter.replace('_', ' ')) > -1;
            
            if (nameMatch && categoryMatch && statusMatch) {
                row.show();
            } else {
                row.hide();
            }
        });
    }
    
    // Filter inventory
    function filterInventory() {
        searchInventory();
    }
    
    // Load expiry tracking data
    function loadExpiryData() {
        $.ajax({
            type: 'GET',
            url: '{% url "store:ajax_expiry_data" %}',
            success: function(data) {
                var tableBody = $('#expiryTableBody');
                tableBody.empty();
                
                if (data.batches && data.batches.length > 0) {
                    data.batches.forEach(function(batch) {
                        var statusClass = batch.days_left > 90 ? 'bg-success' : 
                                         (batch.days_left > 30 ? 'bg-warning' : 'bg-danger');
                        var statusText = batch.days_left > 90 ? 'OK' : 
                                       (batch.days_left > 30 ? 'Expiring Soon' : 'Critical');
                        
                        tableBody.append(`
                            <tr>
                                <td>${batch.material_name}</td>
                                <td>${batch.batch_number}</td>
                                <td>${batch.quantity_left} ${batch.unit_of_measure}</td>
                                <td>${batch.expiry_date}</td>
                                <td>${batch.days_left}</td>
                                <td><span class="badge ${statusClass}">${statusText}</span></td>
                            </tr>
                        `);
                    });
                } else {
                    tableBody.append(`
                        <tr>
                            <td colspan="6" class="text-center text-muted py-3">No batches found</td>
                        </tr>
                    `);
                }
            }
        });
    }
    
    // Load materials for dropdown
    function loadMaterialsList() {
        $.ajax({
            type: 'GET',
            url: '{% url "store:ajax_materials_list" %}',
            success: function(data) {
                var selector = $('#material_selector');
                selector.find('option:not(:first)').remove();
                
                if (data.materials && data.materials.length > 0) {
                    data.materials.forEach(function(material) {
                        selector.append(`
                            <option value="${material.id}">${material.material_name} (${material.material_type_display})</option>
                        `);
                    });
                }
            }
        });
    }
    
    // Load products for multi-select
    function loadProductsList() {
        $.ajax({
            type: 'GET',
            url: '{% url "products:ajax_products_list" %}',
            success: function(data) {
                var selector = $('#associated_products');
                selector.empty();
                
                console.log("Product data received:", data); // Debug output
                
                if (data.products && data.products.length > 0) {
                    data.products.forEach(function(product) {
                        selector.append(`
                            <option value="${product.id}">${product.product_name} (${product.category})</option>
                        `);
                    });
                    console.log(`Loaded ${data.products.length} products into dropdown`); // Debug output
                } else {
                    selector.append(`
                        <option value="" disabled>No products available</option>
                    `);
                    console.log("No products found in response"); // Debug output
                    
                    // Create a default product option if none are available
                    selector.append(`
                        <option value="default">Sample Product (For Testing)</option>
                    `);
                }
            },
            error: function(xhr, status, error) {
                console.error("Error loading products:", error);
                var selector = $('#associated_products');
                selector.empty();
                selector.append(`
                    <option value="" disabled>Error loading products</option>
                `);
            }
        });
    }
    
    // Start a material release
    function startRelease(bmrId, bmrNumber) {
        if(confirm(`Start raw material release for BMR #${bmrNumber}?`)) {
            $.ajax({
                type: 'POST',
                url: '{% url "store:ajax_phase_action" %}',
                data: {
                    'action': 'start',
                    'bmr_id': bmrId,
                    'csrfmiddlewaretoken': '{{ csrf_token }}'
                },
                success: function(response) {
                    if(response.status === 'success') {
                        location.reload();
                    } else {
                        alert('Error: ' + response.message);
                    }
                }
            });
        }
    }
    
    // Complete a material release
    function completeRelease(bmrId, bmrNumber) {
        if(confirm(`Complete raw material release for BMR #${bmrNumber}?`)) {
            $.ajax({
                type: 'POST',
                url: '{% url "store:ajax_phase_action" %}',
                data: {
                    'action': 'complete',
                    'bmr_id': bmrId,
                    'csrfmiddlewaretoken': '{{ csrf_token }}'
                },
                success: function(response) {
                    if(response.status === 'success') {
                        location.reload();
                    } else {
                        alert('Error: ' + response.message);
                    }
                }
            });
        }
    }
    
    // Reset new material form after successful submission
    function resetNewMaterialForm() {
        $('#newMaterialForm')[0].reset();
        $('#newMaterialSuccess').addClass('d-none');
    }
    
    // Reset receive material form after successful submission
    function resetReceiveMaterialForm() {
        $('#receiveMaterialForm')[0].reset();
        $('#receiveMaterialSuccess').addClass('d-none');
    }
    
    // View material details modal
    function viewMaterialDetails(materialId) {
        // Fetch material details
        $.ajax({
            url: `/raw-materials/api/materials/?material_id=${materialId}`,
            method: 'GET',
            success: function(data) {
                if (data.success) {
                    // Create a modal with detailed material information
                    let material = data.material;
                    const modalContent = `
                    <div class="modal fade" id="materialDetailsModal" tabindex="-1" aria-hidden="true">
                      <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                          <div class="modal-header bg-info text-white">
                            <h5 class="modal-title"><i class="fas fa-box me-2"></i>${material.material_name}</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                          </div>
                          <div class="modal-body">
                            <div class="row mb-3">
                              <div class="col-md-6">
                                <h6>Material Information</h6>
                                <table class="table table-sm table-bordered">
                                  <tr>
                                    <th>Material Code</th>
                                    <td>${material.material_code}</td>
                                  </tr>
                                  <tr>
                                    <th>Category</th>
                                    <td>${material.category_display}</td>
                                  </tr>
                                  <tr>
                                    <th>Unit</th>
                                    <td>${material.unit_of_measure}</td>
                                  </tr>
                                  <tr>
                                    <th>Current Stock</th>
                                    <td><strong>${parseFloat(material.current_stock).toFixed(2)} ${material.unit_of_measure}</strong></td>
                                  </tr>
                                  <tr>
                                    <th>Reorder Level</th>
                                    <td>${parseFloat(material.reorder_level).toFixed(2)} ${material.unit_of_measure}</td>
                                  </tr>
                                  <tr>
                                    <th>Default Supplier</th>
                                    <td>${material.default_supplier || 'Not specified'}</td>
                                  </tr>
                                </table>
                              </div>
                              <div class="col-md-6">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                  <h6>Associated Products</h6>
                                  <button type="button" class="btn btn-sm btn-primary" onclick="editProductAssociations(${material.id})">
                                    <i class="fas fa-edit me-1"></i> Edit Associations
                                  </button>
                                </div>
                                <div class="associated-products p-2 border rounded">
                                  ${material.products && material.products.length > 0 ? 
                                    material.products.map(product => 
                                      `<span class="badge bg-secondary me-1 mb-1 p-2">${product}</span>`
                                    ).join('') : 
                                    '<span class="text-muted">No associated products</span>'}
                                </div>
                              </div>
                            </div>
                          </div>
                          <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                          </div>
                        </div>
                      </div>
                    </div>`;
                    
                    // Remove existing modal if any
                    $('#materialDetailsModal').remove();
                    
                    // Add modal to body and show it
                    $('body').append(modalContent);
                    $('#materialDetailsModal').modal('show');
                } else {
                    alert('Error loading material details: ' + data.error);
                }
            },
            error: function() {
                alert('Error loading material details');
            }
        });
    }
    
    function viewMaterialBatches(materialId) {
        // Fetch material batches
        $.ajax({
            url: `/raw-materials/api/batch-detail/?material_id=${materialId}`,
            method: 'GET',
            success: function(data) {
                if (data.success) {
                    // Create a modal with batch information
                    let material = data.material;
                    let batches = data.batches || [];
                    
                    // Count approved batches
                    let approvedBatches = batches.filter(b => b.status === 'approved').length;
                    let pendingBatches = batches.filter(b => b.status === 'pending_qc').length;
                    let rejectedBatches = batches.filter(b => b.status === 'rejected').length;
                    
                    let batchesHtml = '';
                    if (batches.length > 0) {
                        // Add summary of batches at the top
                        batchesHtml = `
                        <div class="d-flex flex-wrap mb-3 gap-2">
                            <div class="border rounded p-2 text-center">
                                <h6 class="mb-1">Total Batches</h6>
                                <span class="fs-4">${batches.length}</span>
                            </div>
                            <div class="border rounded p-2 text-center bg-success bg-opacity-10">
                                <h6 class="mb-1">Approved</h6>
                                <span class="fs-4">${approvedBatches}</span>
                            </div>
                            <div class="border rounded p-2 text-center bg-warning bg-opacity-10">
                                <h6 class="mb-1">Pending QC</h6>
                                <span class="fs-4">${pendingBatches}</span>
                            </div>
                            <div class="border rounded p-2 text-center bg-danger bg-opacity-10">
                                <h6 class="mb-1">Rejected</h6>
                                <span class="fs-4">${rejectedBatches}</span>
                            </div>
                        </div>
                        `;
                        
                        batchesHtml += '<table class="table table-sm table-striped"><thead><tr>' +
                                      '<th>Batch #</th><th>Supplier</th><th>Received</th><th>Expiry</th><th>Qty Remaining</th><th>Status</th></tr></thead><tbody>';
                        
                        batches.forEach(batch => {
                            const statusClass = batch.status === 'approved' ? 'success' : 
                                              (batch.status === 'pending_qc' ? 'warning' : 'danger');
                            
                            const statusDisplay = {
                                'approved': 'Approved',
                                'pending_qc': 'Pending QC',
                                'rejected': 'Rejected',
                                'expired': 'Expired',
                                'depleted': 'Depleted'
                            }[batch.status] || batch.status;
                            
                            batchesHtml += `<tr>
                                <td>${batch.batch_number}</td>
                                <td>${batch.supplier || 'N/A'}</td>
                                <td>${batch.received_date}</td>
                                <td>${batch.expiry_date}</td>
                                <td>${parseFloat(batch.quantity_remaining).toFixed(2)} ${material.unit_of_measure}</td>
                                <td><span class="badge bg-${statusClass}">${statusDisplay}</span></td>
                            </tr>`;
                        });
                        
                        batchesHtml += '</tbody></table>';
                    } else {
                        batchesHtml = '<div class="alert alert-info">No batches found for this material</div>';
                    }
                    
                    const modalContent = `
                    <div class="modal fade" id="batchesModal" tabindex="-1" aria-hidden="true">
                      <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                          <div class="modal-header bg-primary text-white">
                            <h5 class="modal-title"><i class="fas fa-layer-group me-2"></i>Batches for ${material.material_name}</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                          </div>
                          <div class="modal-body">
                            ${batchesHtml}
                          </div>
                          <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                          </div>
                        </div>
                      </div>
                    </div>`;
                    
                    // Remove existing modal if any
                    $('#batchesModal').remove();
                    
                    // Add modal to body and show it
                    $('body').append(modalContent);
                    $('#batchesModal').modal('show');
                } else {
                    alert('Error loading batches: ' + data.error);
                }
            },
            error: function() {
                alert('Error loading batches');
            }
        });
    }
    
    // Edit product associations for a material
    function editProductAssociations(materialId) {
        // Close any open material details modal
        $('#materialDetailsModal').modal('hide');
        
        // Fetch available products and current associations
        $.ajax({
            url: `/raw-materials/api/materials/?material_id=${materialId}&include_all_products=true`,
            method: 'GET',
            success: function(data) {
                if (data.success) {
                    const material = data.material;
                    const allProducts = data.all_products || [];
                    
                    // Create arrays of product IDs for easy checking
                    const associatedProductIds = material.product_ids || [];
                    
                    // Build product checkboxes HTML
                    let productsHtml = '';
                    
                    if (allProducts.length === 0) {
                        productsHtml = '<div class="alert alert-info">No products found in the system.</div>';
                    } else {
                        productsHtml = '<div class="list-group product-selection-list" style="max-height: 300px; overflow-y: auto;">';
                        
                        allProducts.forEach(product => {
                            const isChecked = associatedProductIds.includes(product.id) ? 'checked' : '';
                            
                            productsHtml += `
                            <div class="list-group-item">
                                <div class="form-check">
                                    <input class="form-check-input product-checkbox" type="checkbox" 
                                           value="${product.id}" id="product_edit_${product.id}" ${isChecked}>
                                    <label class="form-check-label" for="product_edit_${product.id}">
                                        ${product.name} (${product.type})
                                    </label>
                                </div>
                            </div>`;
                        });
                        
                        productsHtml += '</div>';
                    }
                    
                    // Build modal HTML
                    const modalHtml = `
                    <div class="modal fade" id="editAssociationsModal" tabindex="-1" aria-hidden="true">
                        <div class="modal-dialog modal-lg">
                            <div class="modal-content">
                                <div class="modal-header bg-primary text-white">
                                    <h5 class="modal-title">
                                        <i class="fas fa-edit me-2"></i>Edit Product Associations for ${material.material_name}
                                    </h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <p class="text-muted">Select which products use this raw material:</p>
                                    <form id="editAssociationsForm">
                                        <input type="hidden" name="material_id" value="${material.id}">
                                        <input type="hidden" name="csrfmiddlewaretoken" value="{{ csrf_token }}">
                                        
                                        <div class="mb-3">
                                            <label class="form-label d-flex justify-content-between">
                                                <span>Products</span>
                                                <span class="badge bg-primary" id="selectedCountEdit">0 selected</span>
                                            </label>
                                            ${productsHtml}
                                        </div>
                                        
                                        <div class="alert alert-success d-none" id="editAssociationsSuccess">
                                            <i class="fas fa-check-circle me-2"></i>Product associations updated successfully!
                                        </div>
                                        <div class="alert alert-danger d-none" id="editAssociationsError"></div>
                                    </form>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="button" class="btn btn-primary" onclick="saveProductAssociations()">
                                        <i class="fas fa-save me-2"></i>Save Changes
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    `;
                    
                    // Remove existing modal if any
                    $('#editAssociationsModal').remove();
                    
                    // Add modal to body and show it
                    $('body').append(modalHtml);
                    const modal = new bootstrap.Modal(document.getElementById('editAssociationsModal'));
                    modal.show();
                    
                    // Update the selected count
                    updateSelectedCount();
                    
                    // Add event listeners to checkboxes
                    $('.product-checkbox').on('change', function() {
                        updateSelectedCount();
                    });
                } else {
                    alert('Error loading material details: ' + (data.error || 'Unknown error'));
                }
            },
            error: function() {
                alert('Error loading material details. Please try again.');
            }
        });
    }
    
    // Update the selected count in the edit associations modal
    function updateSelectedCount() {
        const selectedCount = $('.product-checkbox:checked').length;
        $('#selectedCountEdit').text(selectedCount + ' selected');
    }
    
    // Save product associations
    function saveProductAssociations() {
        // Get selected product IDs
        const selectedProducts = [];
        $('.product-checkbox:checked').each(function() {
            selectedProducts.push($(this).val());
        });
        
        const materialId = $('#editAssociationsForm input[name="material_id"]').val();
        
        // Hide any previous alerts
        $('#editAssociationsSuccess').addClass('d-none');
        $('#editAssociationsError').addClass('d-none');
        
        // Send update request
        $.ajax({
            url: '/raw-materials/api/update-associations/',
            method: 'POST',
            data: {
                material_id: materialId,
                product_ids: JSON.stringify(selectedProducts),
                csrfmiddlewaretoken: '{{ csrf_token }}'
            },
            success: function(response) {
                if (response.success) {
                    // Show success message
                    $('#editAssociationsSuccess').removeClass('d-none');
                    
                    // Close modal after a delay and refresh the page
                    setTimeout(function() {
                        $('#editAssociationsModal').modal('hide');
                        location.reload();
                    }, 1500);
                } else {
                    // Show error message
                    $('#editAssociationsError').text(response.error || 'Unknown error occurred').removeClass('d-none');
                }
            },
            error: function() {
                $('#editAssociationsError').text('Error saving changes. Please try again.').removeClass('d-none');
            }
        });
    }
    
    // Toggle between inventory views
    $('#view-by-material-btn').on('click', function() {
        $(this).addClass('active');
        $('#view-by-product-btn').removeClass('active');
        $('#materials-inventory-view').show();
        $('#products-inventory-view').hide();
    });
    
    $('#inventory-by-material-btn').on('click', function() {
        $(this).addClass('active');
        $('#inventory-by-product-btn').removeClass('active');
        $('#inventory-materials-view').show();
        $('#inventory-products-view').hide();
    });
    
    $('#view-by-product-btn, #inventory-by-product-btn').on('click', function() {
        // Update both toggle button groups to be consistent
        $('#view-by-product-btn').addClass('active');
        $('#view-by-material-btn').removeClass('active');
        $('#inventory-by-product-btn').addClass('active');
        $('#inventory-by-material-btn').removeClass('active');
        
        // Show product views and hide material views
        $('#products-inventory-view').show();
        $('#materials-inventory-view').hide();
        $('#inventory-products-view').show();
        $('#inventory-materials-view').hide();
        
        // Load product inventory data
        loadProductInventory();
    });
    
    // Load inventory organized by product
    function loadProductInventory() {
        $('#productInventoryTableBody, #productInventoryTable').html(`
            <tr>
                <td colspan="5" class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </td>
            </tr>
        `);
        
        $.ajax({
            url: '/raw-materials/api/inventory-by-product/',
            method: 'GET',
            success: function(data) {
                if (data.success) {
                    if (data.product_inventory && data.product_inventory.length > 0) {
                        let tableContent = '';
                        
                        data.product_inventory.forEach(product => {
                            // Calculate material status
                            let materialStatus = 'Good';
                            let statusClass = 'success';
                            let lowStockCount = 0;
                            let outOfStockCount = 0;
                            let pendingQCCount = 0;
                            
                            product.materials.forEach(material => {
                                if (material.approved_quantity < material.reorder_level) {
                                    lowStockCount++;
                                    if (material.approved_quantity === 0) {
                                        outOfStockCount++;
                                    }
                                }
                                
                                if (material.pending_quantity > 0) {
                                    pendingQCCount++;
                                }
                            });
                            
                            if (outOfStockCount > 0) {
                                materialStatus = `${outOfStockCount} out of stock`;
                                statusClass = 'danger';
                            } else if (lowStockCount > 0) {
                                materialStatus = `${lowStockCount} low stock`;
                                statusClass = 'warning';
                            }
                            
                            tableContent += `
                            <tr>
                                <td>${product.product_name}</td>
                                <td>${product.product_type}</td>
                                <td>
                                    <span class="badge bg-${statusClass}">${materialStatus}</span>
                                    <span class="badge bg-primary">${product.material_count} materials</span>
                                </td>
                                <td>
                                    ${pendingQCCount > 0 ? 
                                        `<span class="badge bg-info">${pendingQCCount} materials pending QC</span>` : 
                                        `<span class="badge bg-secondary">No pending QC</span>`
                                    }
                                </td>
                                <td>
                                    <button class="btn btn-sm btn-info" onclick="showProductMaterials(${product.id})">
                                        <i class="fas fa-list me-1"></i>Materials
                                    </button>
                                </td>
                            </tr>
                            `;
                        });
                        
                        $('#productInventoryTableBody, #productInventoryTable tbody').html(tableContent);
                    } else {
                        $('#productInventoryTableBody, #productInventoryTable tbody').html(`
                            <tr>
                                <td colspan="5" class="text-center">
                                    No products found
                                </td>
                            </tr>
                        `);
                    }
                } else {
                    $('#productInventoryTableBody, #productInventoryTable tbody').html(`
                        <tr>
                            <td colspan="5" class="text-center text-danger">
                                Error loading product inventory: ${data.error || 'Unknown error'}
                            </td>
                        </tr>
                    `);
                }
            },
            error: function() {
                $('#productInventoryTableBody, #productInventoryTable tbody').html(`
                    <tr>
                        <td colspan="5" class="text-center text-danger">
                            Failed to load product inventory. Please try again.
                        </td>
                    </tr>
                `);
            }
        });
    }
    
    // Show materials for a specific product
    function showProductMaterials(productId) {
        // Show loading
        const loadingModal = `
        <div class="modal fade" id="productMaterialsModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header bg-primary text-white">
                        <h5 class="modal-title"><i class="fas fa-boxes me-2"></i>Loading Materials...</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body text-center p-5">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p class="mt-3">Loading product materials...</p>
                    </div>
                </div>
            </div>
        </div>`;
        
        // Remove any existing modal
        $('#productMaterialsModal').remove();
        
        // Add and show loading modal
        $('body').append(loadingModal);
        const modal = new bootstrap.Modal(document.getElementById('productMaterialsModal'));
        modal.show();
        
        // Fetch product materials
        $.ajax({
            url: '/raw-materials/api/inventory-by-product/',
            method: 'GET',
            data: {
                product_id: productId
            },
            success: function(data) {
                if (data.success) {
                    const product = data.product_inventory.find(p => p.id === productId);
                    
                    if (product) {
                        // Create materials table content
                        let materialsHtml = `
                        <div class="table-responsive">
                            <table class="table table-sm table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th>Material</th>
                                        <th>Code</th>
                                        <th>Approved Stock</th>
                                        <th>Pending QC</th>
                                        <th>Reorder Level</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody>`;
                                
                        if (product.materials.length > 0) {
                            product.materials.forEach(material => {
                                const statusClass = material.status === 'low_stock' ? 'warning' : 'success';
                                materialsHtml += `
                                <tr>
                                    <td>${material.material_name}</td>
                                    <td>${material.material_code}</td>
                                    <td>${material.approved_quantity.toFixed(2)} ${material.unit_of_measure}</td>
                                    <td>${material.pending_quantity > 0 ? 
                                        `<span class="badge bg-info">${material.pending_quantity.toFixed(2)} ${material.unit_of_measure}</span>` : 
                                        '-'}
                                    </td>
                                    <td>${material.reorder_level.toFixed(2)} ${material.unit_of_measure}</td>
                                    <td>
                                        <span class="badge bg-${statusClass}">
                                            ${material.status === 'low_stock' ? 'Low Stock' : 'In Stock'}
                                        </span>
                                    </td>
                                </tr>`;
                            });
                        } else {
                            materialsHtml += `
                            <tr>
                                <td colspan="6" class="text-center">No materials associated with this product</td>
                            </tr>`;
                        }
                        
                        materialsHtml += `
                                </tbody>
                            </table>
                        </div>`;
                        
                        // Update modal content
                        $('#productMaterialsModal .modal-title').html(`<i class="fas fa-boxes me-2"></i>Materials for ${product.product_name}`);
                        $('#productMaterialsModal .modal-body').html(materialsHtml);
                        
                    } else {
                        $('#productMaterialsModal .modal-body').html(`
                            <div class="alert alert-warning">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                Product not found or has no associated materials.
                            </div>
                        `);
                    }
                } else {
                    $('#productMaterialsModal .modal-body').html(`
                        <div class="alert alert-danger">
                            <i class="fas fa-exclamation-circle me-2"></i>
                            Error: ${data.error || 'Failed to load product materials'}
                        </div>
                    `);
                }
            },
            error: function() {
                $('#productMaterialsModal .modal-body').html(`
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-circle me-2"></i>
                        Failed to load product materials. Please try again.
                    </div>
                `);
            }
        });
    }
</script>
{% endblock %}
